<?php

/**
 * This is the model base class for the table "tbl_transaction".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Transaction".
 *
 * Columns in table "tbl_transaction" available as properties of the model,
 * followed by relations of table "tbl_transaction" available as properties of the model.
 *
 * @property integer $id
 * @property string $transaction_date
 * @property integer $sold_price
 * @property integer $product_id
 * @property string $client_name
 * @property string $client_number
 * @property string $client_email
 * @property integer $location_id
 * @property string $remarks
 *
 * @property Product $product
 * @property Location $location
 */
abstract class BaseTransaction extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_transaction';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Transaction|Transactions', $n);
	}

	public static function representingColumn() {
		return 'transaction_date';
	}

	public function rules() {
		return array(
			array('transaction_date, sold_price, product_id, client_name, client_number, client_email, location_id, remarks', 'required'),
			array('sold_price, product_id, location_id', 'numerical', 'integerOnly'=>true),
			array('client_name, client_email', 'length', 'max'=>50),
			array('client_number', 'length', 'max'=>100),
			array('id, transaction_date, sold_price, product_id, client_name, client_number, client_email, location_id, remarks', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'product' => array(self::BELONGS_TO, 'Product', 'product_id'),
			'location' => array(self::BELONGS_TO, 'Location', 'location_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'transaction_date' => Yii::t('app', 'Transaction Date'),
			'sold_price' => Yii::t('app', 'Sold Price'),
			'product_id' => null,
			'client_name' => Yii::t('app', 'Client Name'),
			'client_number' => Yii::t('app', 'Client Number'),
			'client_email' => Yii::t('app', 'Client Email'),
			'location_id' => null,
			'remarks' => Yii::t('app', 'Remarks'),
			'product' => null,
			'location' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('transaction_date', $this->transaction_date, true);
		$criteria->compare('sold_price', $this->sold_price);
		$criteria->compare('product_id', $this->product_id);
		$criteria->compare('client_name', $this->client_name, true);
		$criteria->compare('client_number', $this->client_number, true);
		$criteria->compare('client_email', $this->client_email, true);
		$criteria->compare('location_id', $this->location_id);
		$criteria->compare('remarks', $this->remarks, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
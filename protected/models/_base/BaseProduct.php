<?php

/**
 * This is the model base class for the table "tbl_product".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Product".
 *
 * Columns in table "tbl_product" available as properties of the model,
 * followed by relations of table "tbl_product" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $type
 * @property string $quality
 * @property integer $height
 * @property integer $width
 * @property integer $producer_id
 * @property integer $price
 * @property string $status
 * @property string $image
 * @property string $remarks
 * @property string $acquisition_date
 *
 * @property Producer $producer
 * @property Transaction[] $transactions
 */
abstract class BaseProduct extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_product';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Product|Products', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, type, quality, height, width, producer_id, price, status, image, remarks, acquisition_date', 'required'),
			array('height, width, producer_id, price', 'numerical', 'integerOnly'=>true),
			array('name, type, image', 'length', 'max'=>30),
			array('quality, status', 'length', 'max'=>10),
			array('id, name, type, quality, height, width, producer_id, price, status, image, remarks, acquisition_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'producer' => array(self::BELONGS_TO, 'Producer', 'producer_id'),
			'transactions' => array(self::HAS_MANY, 'Transaction', 'product_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'type' => Yii::t('app', 'Type'),
			'quality' => Yii::t('app', 'Quality'),
			'height' => Yii::t('app', 'Height'),
			'width' => Yii::t('app', 'Width'),
			'producer_id' => null,
			'price' => Yii::t('app', 'Price'),
			'status' => Yii::t('app', 'Status'),
			'image' => Yii::t('app', 'Image'),
			'remarks' => Yii::t('app', 'Remarks'),
			'acquisition_date' => Yii::t('app', 'Acquisition Date'),
			'producer' => null,
			'transactions' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('quality', $this->quality, true);
		$criteria->compare('height', $this->height);
		$criteria->compare('width', $this->width);
		$criteria->compare('producer_id', $this->producer_id);
		$criteria->compare('price', $this->price);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('remarks', $this->remarks, true);
		$criteria->compare('acquisition_date', $this->acquisition_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}